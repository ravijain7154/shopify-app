<script src="{{ 'jquery.min.js' | asset_url }}"></script>
  <link href="{{ 'datatables.min.css' | asset_url }}" rel="stylesheet">
  <script src="{{ 'datatables.min.js' | asset_url }}" defer></script>
{{ 'ring_builder.css' | asset_url | stylesheet_tag }}
{{ 'diamond.css' | asset_url | stylesheet_tag }}
<!-- datatable start -->
  <!-- {% paginate collections.Diamonds.products by 2 %}
    {% assign tag_use_count = 0 %}
    {% for product in collections.Diamonds.products %}
      {% assign tag_use_count = tag_use_count | plus: 1 %}
    {% endfor %}
    Total: {{ tag_use_count }}
  {% endpaginate %} -->

{{ 'ion.rangeSlider.css' | asset_url | stylesheet_tag }}
{{ 'ion.rangeSlider.skinNice.css' | asset_url | stylesheet_tag }}

<script src="{{ 'ion.rangeSlider.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'script.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'manage_diamond.js' | asset_url }}" defer="defer"></script>

<!-- datatable end -->
  {% paginate collection.products by collection.all_products_count %}
{% assign products_count = collection.all_products_count %}
<section class="" id="search_div" style="">
<div class="custom-container">
  <form action="javascript:void(0)" method="post" id="form">
    <div class="filter">
        <div class="product-block btn_block"><button id="reset_btn" class="btn">Reset Option</button></div>
        <div class=" filter-holder">
          <div class="search_filter_cut tps_filter row padding-tb">
            <div class="col-sm-12 col-lg-6 col-md-6 col-12 shapes">
              <div class="label_div">
                <label class="tx-center">Shape:</label>
                <!-- <a href="#" data-bs-toggle="tooltip" data-bs-title="Default tooltip">inline links</a>  -->
                <!-- <button type="button" class="btn btn-secondary"data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Tooltip on top" >
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"> 
                    <path d="M8 0C3.582 0 0 3.582 0 8C0 12.418 3.582 16 8 16C12.418 16 16 12.418 16 8C16 3.582 12.418 0 8 0ZM8.66667 12H7.33333V7.33333H8.66667V12ZM8 5.66667C7.448 5.66667 7 5.21867 7 4.66667C7 4.11467 7.448 3.66667 8 3.66667C8.552 3.66667 9 4.11467 9 4.66667C9 5.21867 8.552 5.66667 8 5.66667Z" fill="#eeeeee"></path> 
                    </svg>
                </button> -->
              </div>
          <div class="tps_inputrange_shape">
            <ul class="tps_diamond_shapes shapes-display" id="tps_diamond_shapes">
              <li class="idshaperound">
                <label for="idshaperound">
                  <input type="checkbox" name="checkbox[]" id="idshaperound" value="Round">
                  
                    <div class="img_shape round">
                      <img src="{{ 'ROUND-black.svg' | asset_url }}" class="black-img img-fluid width_new">
                      <img src="{{ 'round.svg' | asset_url }}" class="white-img img-fluid width_new"> 
                    </div>
                  <div class="text_shape">Round</div>
                 </label>
              </li>
             <li>
                <label for="idshapeprinces">
                  <input type="checkbox" name="checkbox[]" id="idshapeprinces" value="PRINCESS">
                    
                     <div class="img_shape princess">
                      <img src="{{ 'PRINCESS-black.svg' | asset_url }}" class="black-img img-fluid width_new">
                      <img src="{{ 'princess.svg' | asset_url }}" class="white-img img-fluid width_new">
                    </div>
                  <div class="text_shape">Princess</div>
                </label>
              </li>
             <li>
                <label for="idshapecushion">
                  <input type="checkbox" name="checkbox[]" id="idshapecushion" value="CUSHION">
                 
                  <div class="img_shape cushion">
                   <img src="{{ 'CUSHION-black.svg' | asset_url }}" class="black-img img-fluid width_new">
                   <img src="{{ 'CUSHION_BRILLIANT.svg' | asset_url }}" class="white-img img-fluid width_new">
                  </div>
                   <div class="text_shape">Cushion</div>
                </label>
              </li>
             
              <li>
                <label for="idshapeemerald">
                  <input type="checkbox" name="checkbox[]" id="idshapeemerald" value="EMERALD">
                   <div class="img_shape emerald">
                      <img src="{{ 'EMERALD-black.svg' | asset_url }}" class="black-img img-fluid width_new">
                      <img src="{{ 'EMERALD.svg' | asset_url }}" class="white-img img-fluid width_new">
                    </div>
                  <div class="text_shape">Emerald</div>
                    
                  
                </label>
              </li>
              <li>
                <label for="idshapeoval">
                  <input type="checkbox" name="checkbox[]" id="idshapeoval" value="OVAL">
                   
                  
                    <div class="img_shape oval">
                      <img src="{{ 'OVAL-black.svg' | asset_url }}" class="black-img img-fluid width_new">
                      <img src="{{ 'OVAL.svg' | asset_url }}" class="white-img img-fluid width_new">
                    </div>
                   <div class="text_shape">Oval</div>
                    
                  
                </label>
              </li>
              <!-- <div class="clearfix"></div>  -->
             <li>
                <label for="idshaperadiant">
                  <input type="checkbox" name="checkbox[]" id="idshaperadiant" value="RADIANT">
                  <div class="img_shape radiant">
                      <img src="{{ 'RADIANT-black.svg' | asset_url }}" class="black-img img-fluid width_new">
                      <img src="{{ 'RADIANT.svg' | asset_url }}" class="white-img img-fluid width_new">
                    </div>
                   <div class="text_shape text-shape">Radiant</div>
                  
                </label>
              </li>
             <li>
                <label for="idshapeasscher">
                  <input type="checkbox" name="checkbox[]" id="idshapeasscher" value="ASSCHER">
                  
                    
                    <div class="img_shape asscher">
                      <img src="{{ 'ASSCHER-black.svg' | asset_url }}" class="black-img img-fluid width_new">
                      <img src="{{ 'ASSCHER.svg' | asset_url }}" class="white-img img-fluid width_new">
                    </div>
                    <div class="text_shape text-shape">Asscher</div>
                  
                </label>
              </li>
             
             <li>
                <label for="idshapemarquise">
                  <input type="checkbox" name="checkbox[]" id="idshapemarquise" value="MARQUISE">
                  
                    <div class="img_shape marquies">
                      <img src="{{ 'MARQUISE-black.svg' | asset_url }}" class="white-img img-fluid width_new">
                      <img src="{{ 'MARQUISE.svg' | asset_url }}" class="white-img img-fluid width_new">
                    </div>
                    <div class="text_shape text-shape">Marquise</div>
                  
                </label>
              </li>
             <li>
                <label for="idshapeheart">
                  <input type="checkbox" name="checkbox[]" id="idshapeheart" value="HEART">
                  <div class="img_shape heart">
                       <img src="{{ 'HEART-black.svg' | asset_url }}" class="white-img img-fluid width_new">
                      <img src="{{ 'HEART.svg' | asset_url }}" class="white-img img-fluid width_new">
                    </div>
                    <div class="text_shape text-shape">Heart</div>
                  
                </label>
              </li>
              <li>
                <label for="idshapepear">
                  <input type="checkbox" name="checkbox[]" id="idshapepear" value="PEAR">
                  <div  class="img_shape pear">
                      <img src="{{ 'PEAR-black.svg' | asset_url }}" class="white-img img-fluid width_new">
                      <img src="{{ 'PEAR.svg' | asset_url }}" class="white-img img-fluid width_new">
                    </div>
                    <div class="text_shape text-shape">Pear</div>
                  
                </label>
              </li>
              <li class="last-child">
                <div class="img_shape svg-holder more">
                    <a href="javascript:void(0);">More Shapes</a>
                    <ul class="additional-list">
                       <li>         
                        <label for="idshapecushion-brilliant">
                            <input type="checkbox" name="checkbox[]" id="idshapecushion-brilliant" value="Cushion Brilliant">
                             <div  class="img_shape">
                                 <img src="{{ 'CUSHION_BRILLIANT.svg' | asset_url }}" class="white-img img-fluid width_new">
                                 <img src="{{ 'CUSHION-black.svg' | asset_url }}" class="black-img img-fluid width_new">
                               
                               
                
                             </div>
                            <div class="text_shape text-shape">Cushion Brilliant</div>
                          </label>
                        </li>
                      <li>         
                        <label for="idshapecushion-brilliant">
                            <input type="checkbox" name="checkbox[]" id="idshapecushion-brilliant" value="Cushion Modified">
                             <div  class="img_shape">
                                 <img src="{{ 'CUSHION_MODIFIED.svg' | asset_url }}" class="white-img img-fluid width_new">
                                 <img src="{{ 'CUSHION_MODIFIED-black.svg' | asset_url }}" class="black-img img-fluid width_new">
                               
                               
                
                             </div>
                            <div class="text_shape text-shape">Cushion Modified</div>
                          </label>
                        </li>
                      <li>         
                        <label for="idshapetrapezoid">
                            <input type="checkbox" name="checkbox[]" id="idshapetrapezoid" value="TRAPEZOID">
                             <div  class="img_shape">
                                 <img src="{{ 'TRAPEZOID.svg' | asset_url }}" class="white-img img-fluid width_new">
                                 <img src="{{ 'TRAPEZOID-black.svg' | asset_url }}" class="black-img img-fluid width_new">
                              </div>
                            <div class="text_shape text-shape">TRAPEZOID</div>
                          </label>
                        </li>
                       <li>         
                        <label for="idshapetrilliant">
                            <input type="checkbox" name="checkbox[]" id="idshapetrilliant" value="TRILLIANT">
                             <div  class="img_shape">
                                 <img src="{{ 'TRILLIANT.svg' | asset_url }}" class="white-img img-fluid width_new">
                                 <img src="{{ 'TRILLIANT-black.svg' | asset_url }}" class="black-img img-fluid width_new">
                              </div>
                            <div class="text_shape text-shape">Trilliant</div>
                          </label>
                        </li>
                        <li>         
                        <label for="idshapebriolette">
                            <input type="checkbox" name="checkbox[]" id="idshapebriolette" value="BRIOLETTE">
                             <div  class="img_shape">
                                 <img src="{{ 'BRIOLETTE.svg' | asset_url }}" class="white-img img-fluid width_new">
                                 <img src="{{ 'BRIOLETTE-black.svg' | asset_url }}" class="black-img img-fluid width_new">
                              </div>
                            <div class="text_shape text-shape">Briolette</div>
                          </label>
                        </li>
                    </ul>
            </div>
              </li>
            </ul>
          </div>
          </div> 
            <div class="col-sm-12 col-md-6 col-lg-6 col-12 mb-5 carat">
              <div class="display-flex row new_add">
              <div class="label_div">
                <label class="tx-center">Carat:</label>
              </div>
              <div class="d-center">
                        <div class="range_group">
                          
                            <input type="text" id="range_56" value="" name="size" />
                            <div class="col-sm-6 col-md-6 col-lg-6 col-xs-6 px-0">
                              <div class="from_group left"> 
                                <input type="text" step="0.02" min="0.02" max="30" id="range_56_input_from"  onkeyup="setSliderFromTo1()"  class=" text-right pull-left text-design"/>
                                <span class="place_label">From</span>
                              </div>
                            </div>
                            <div class="col-sm-6 col-md-6 col-lg-6 col-xs-6 px-0">
                               <div class="from_group right">
                                 <input type="text" step="0.02" min="0.02" max="30" id="range_56_input_to"  onkeyup="setSliderFromTo1()" class="text-right pull-right text-design"/> 
                                 <span class="place_label">To</span>
                               </div>
                            </div>
                        </div>
               </div>
            </div>
            </div>
           <div class="col-sm-12 col-md-6 col-lg-6 col-12 mb-5 cut ">

                     <div class="display-flex row new_add">
                      <div class="label_div">
                        <label class="tx-center">Cut:</label>
                      </div>
                      <div class="d-center">
                        <div class="range_group">
                         <input type="text" id="range_51a" value="" name="cut" />
                        </div>
                      </div>
                     </div>
                    </div>
                         <div class="col-sm-12 col-md-6 col-lg-6 col-12 mb-5 price">
                <div class="display-flex row new_add">
                <div class="label_div">
                  <label class="tx-center">Price:</label>
                </div>
                  <div class="d-center">
                            <div class="range_group">
                            <input type="text" id="range_55" value="" name="price" />
                            <div class="col-sm-6 col-md-6 col-lg-6 col-xs-6 px-0">
                              <div class="from_group left"> 
                              <input type="text" id="range_55_input_from"  onchange="price_range()" class="text-right pull-left text-design"/>
                              <span class="place_label">From</span>
                              </div>
                            </div>
                            <div class="col-sm-6 col-md-6 col-lg-6 col-xs-6 px-0">
                              <div class="from_group right">
                              <input type="text" id="range_55_input_to"  onchange="price_range()" class="text-right pull-right text-design"/>
                              <span class="place_label">To</span>
                              </div>
                            </div>
                        </div>
                   
                  </div>
                </div>
              </div>

            
              
             
            <div class="col-sm-12 col-md-6 col-lg-6 col-12 mb-5 clarity ">
              <div class="display-flex row new_add">
              <div class="label_div">
                <label class="tx-center">Clarity:</label>
              </div>
              <div class="d-center">
                 <div class="range_group">
                         <input type="text" id="range_50" value="" name="clarity" />
                        </div>
            
              </div>
            </div>
            </div> 
            <div class="col-sm-12 col-md-12 col-lg-12 col-12 mb-5 color">
              <div class="display-flex row new_add">
              <div class="label_div">
                <label class="tx-center">Color:</label>
              </div>
              <div class="d-center">
                      <div class="range_group">
                         <input type="text" id="range_color" value="" name="clarity" />
                        </div>
              </div>
              </div>
            </div>
<button class="more_filter_btn"><span>More Filter </span><svg viewBox="64 64 896 896" focusable="false" class="rotate-90" data-icon="right" width="12px" height="12px" fill="currentColor" aria-hidden="true"><path d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"></path></svg></button>
<div class="more-filter search_filter_cut tps_filter row padding-tb" style="display: none; width:100%;">
        
          <div class="col-sm-12 col-md-6 col-lg-6 col-12 mb-5 ">
                 <div class="display-flex row new_add">
              <div class="label_div">
                <label class="tx-center">Polish:</label>
              </div>
              <div class="d-center">

                        <div class="range_group">
                         <input type="text" id="range_51ab" value="" name="clarity" />
                        </div>
                          
                
              </div>
                </div>
            </div>
    <div class="col-sm-12 col-md-6 col-lg-6 col-12 mb-5">    
                 <div class="display-flex  row new_add">
              <div class="label_div">
                <label class="tx-center">Fluorescence:</label>
              </div>
              <div class="d-center">
                <div class="range_group">
                         <input type="text" id="range_fluor" value="" name="clarity" />
                        </div>
               
              </div>
           </div>        
               </div>
          <div class="col-sm-12 col-md-6 col-lg-6 col-12 mb-5 ">
              <div class="display-flex row new_add">
                      <div class="label_div">
                        <label class="tx-center">Symmetry:</label>
                     </div>
                      <div class="d-center">
                         <div class="range_group">
                         <input type="text" id="range_sys" value="" name="clarity" />
                        </div>
                      </div>
                   </div>                
                 </div>
</div>
      </div>
          
                                 
          <!-- <div id="more_filter" style="display:none;">
            <div class="search_filter_cut tps_filter row "> -->

            
              


  
            <!-- </div>
          </div> -->
        </div>
      </div>
          
    <div class="search-btn">
      <!-- <button class="btn btn-info-reset" type="button" onclick="location.reload()">
        <i class="fa fa-undo"></i>
        Reset
      </button> -->
      <!-- <button class="btn search_btn search-btn" type="button">
        <div class="hide_show">
          <a href="javascript:void(0)" class="">
            <span id="show_advance" class="" onclick="show_search(event)">
              <i class="plus-toggle fa fa-plus"></i> Show Advance Filter</span>
          </a>
        </div>
      </button> -->
    </div>
  </form>
    </div>
</section>

<div class="containter container_table" id ="productsContainer">
{% paginate collections.Diamond-Education.products by 1000 %}
  <div class="btn-group mb-3">
        <p>Total Products: {{ collections.Diamond-Education.all_products_count }}</p>
    <span class="view_item">View :</span>
          <button type="button" id="list-view-btn" class="btn btn-secondary"><svg width="24" height="24" viewBox="0 0 24 24" fill="none">
    <path d="M1.43996 3.35999C1.17559 3.35999 0.959961 3.57561 0.959961 3.83999V5.75999C0.959961 6.02436 1.17559 6.23998 1.43996 6.23998H3.35996C3.62434 6.23998 3.83996 6.02436 3.83996 5.75999V3.83999C3.83996 3.57561 3.62434 3.35999 3.35996 3.35999H1.43996ZM5.66996 3.83999C5.13934 3.86436 4.73059 4.31436 4.75496 4.84499C4.77934 5.37561 5.22934 5.78436 5.75996 5.75999H22.08C22.4268 5.76561 22.7475 5.58374 22.9218 5.28374C23.0981 4.98561 23.0981 4.61436 22.9218 4.31624C22.7475 4.01624 22.4268 3.83436 22.08 3.83999H5.75996C5.72996 3.83811 5.69996 3.83811 5.66996 3.83999ZM1.43996 8.15999C1.17559 8.15999 0.959961 8.37561 0.959961 8.63999V10.56C0.959961 10.8244 1.17559 11.04 1.43996 11.04H3.35996C3.62434 11.04 3.83996 10.8244 3.83996 10.56V8.63999C3.83996 8.37561 3.62434 8.15999 3.35996 8.15999H1.43996ZM5.66996 8.63999C5.13934 8.66436 4.73059 9.11436 4.75496 9.64498C4.77934 10.1756 5.22934 10.5844 5.75996 10.56H22.08C22.4268 10.5656 22.7475 10.3837 22.9218 10.0837C23.0981 9.78561 23.0981 9.41436 22.9218 9.11623C22.7475 8.81624 22.4268 8.63436 22.08 8.63999H5.75996C5.72996 8.63811 5.69996 8.63811 5.66996 8.63999ZM1.43996 12.96C1.17559 12.96 0.959961 13.1737 0.959961 13.44V15.36C0.959961 15.6262 1.17559 15.84 1.43996 15.84H3.35996C3.62434 15.84 3.83996 15.6262 3.83996 15.36V13.44C3.83996 13.1737 3.62434 12.96 3.35996 12.96H1.43996ZM5.66996 13.44C5.13934 13.4644 4.73059 13.9144 4.75496 14.445C4.77934 14.9756 5.22934 15.3844 5.75996 15.36H22.08C22.4268 15.3656 22.7475 15.1837 22.9218 14.8837C23.0981 14.5856 23.0981 14.2144 22.9218 13.9162C22.7475 13.6162 22.4268 13.4344 22.08 13.44H5.75996C5.72996 13.4381 5.69996 13.4381 5.66996 13.44ZM1.43996 17.76C1.17559 17.76 0.959961 17.9737 0.959961 18.24V20.16C0.959961 20.4262 1.17559 20.64 1.43996 20.64H3.35996C3.62434 20.64 3.83996 20.4262 3.83996 20.16V18.24C3.83996 17.9737 3.62434 17.76 3.35996 17.76H1.43996ZM5.66996 18.24C5.13934 18.2644 4.73059 18.7144 4.75496 19.245C4.77934 19.7756 5.22934 20.1844 5.75996 20.16H22.08C22.4268 20.1656 22.7475 19.9837 22.9218 19.6837C23.0981 19.3856 23.0981 19.0144 22.9218 18.7162C22.7475 18.4162 22.4268 18.2344 22.08 18.24H5.75996C5.72996 18.2381 5.69996 18.2381 5.66996 18.24Z" fill="#BDBDBD"></path>
</svg></button>
      <button type="button" id="grid-view-btn" class="btn btn-secondary active"><svg width="24" height="24" viewBox="0 0 24 24" fill="none">
    <path d="M1.91994 4.79999C1.65557 4.79999 1.43994 5.01561 1.43994 5.27999V7.19999C1.43994 7.46436 1.65557 7.67999 1.91994 7.67999H4.79994C5.06432 7.67999 5.27994 7.46436 5.27994 7.19999V5.27999C5.27994 5.01561 5.06432 4.79999 4.79994 4.79999H1.91994ZM7.67994 4.79999C7.41557 4.79999 7.19994 5.01561 7.19994 5.27999V7.19999C7.19994 7.46436 7.41557 7.67999 7.67994 7.67999H10.5599C10.8243 7.67999 11.0399 7.46436 11.0399 7.19999V5.27999C11.0399 5.01561 10.8243 4.79999 10.5599 4.79999H7.67994ZM13.4399 4.79999C13.1737 4.79999 12.9599 5.01561 12.9599 5.27999V7.19999C12.9599 7.46436 13.1737 7.67999 13.4399 7.67999H16.3199C16.5862 7.67999 16.7999 7.46436 16.7999 7.19999V5.27999C16.7999 5.01561 16.5862 4.79999 16.3199 4.79999H13.4399ZM19.1999 4.79999C18.9337 4.79999 18.7199 5.01561 18.7199 5.27999V7.19999C18.7199 7.46436 18.9337 7.67999 19.1999 7.67999H22.0799C22.3462 7.67999 22.5599 7.46436 22.5599 7.19999V5.27999C22.5599 5.01561 22.3462 4.79999 22.0799 4.79999H19.1999ZM1.91994 8.63999C1.65557 8.63999 1.43994 8.85561 1.43994 9.11999V11.04C1.43994 11.3044 1.65557 11.52 1.91994 11.52H4.79994C5.06432 11.52 5.27994 11.3044 5.27994 11.04V9.11999C5.27994 8.85561 5.06432 8.63999 4.79994 8.63999H1.91994ZM7.67994 8.63999C7.41557 8.63999 7.19994 8.85561 7.19994 9.11999V11.04C7.19994 11.3044 7.41557 11.52 7.67994 11.52H10.5599C10.8243 11.52 11.0399 11.3044 11.0399 11.04V9.11999C11.0399 8.85561 10.8243 8.63999 10.5599 8.63999H7.67994ZM13.4399 8.63999C13.1737 8.63999 12.9599 8.85561 12.9599 9.11999V11.04C12.9599 11.3044 13.1737 11.52 13.4399 11.52H16.3199C16.5862 11.52 16.7999 11.3044 16.7999 11.04V9.11999C16.7999 8.85561 16.5862 8.63999 16.3199 8.63999H13.4399ZM19.1999 8.63999C18.9337 8.63999 18.7199 8.85561 18.7199 9.11999V11.04C18.7199 11.3044 18.9337 11.52 19.1999 11.52H22.0799C22.3462 11.52 22.5599 11.3044 22.5599 11.04V9.11999C22.5599 8.85561 22.3462 8.63999 22.0799 8.63999H19.1999ZM1.91994 12.48C1.65557 12.48 1.43994 12.6937 1.43994 12.96V14.88C1.43994 15.1462 1.65557 15.36 1.91994 15.36H4.79994C5.06432 15.36 5.27994 15.1462 5.27994 14.88V12.96C5.27994 12.6937 5.06432 12.48 4.79994 12.48H1.91994ZM7.67994 12.48C7.41557 12.48 7.19994 12.6937 7.19994 12.96V14.88C7.19994 15.1462 7.41557 15.36 7.67994 15.36H10.5599C10.8243 15.36 11.0399 15.1462 11.0399 14.88V12.96C11.0399 12.6937 10.8243 12.48 10.5599 12.48H7.67994ZM13.4399 12.48C13.1737 12.48 12.9599 12.6937 12.9599 12.96V14.88C12.9599 15.1462 13.1737 15.36 13.4399 15.36H16.3199C16.5862 15.36 16.7999 15.1462 16.7999 14.88V12.96C16.7999 12.6937 16.5862 12.48 16.3199 12.48H13.4399ZM19.1999 12.48C18.9337 12.48 18.7199 12.6937 18.7199 12.96V14.88C18.7199 15.1462 18.9337 15.36 19.1999 15.36H22.0799C22.3462 15.36 22.5599 15.1462 22.5599 14.88V12.96C22.5599 12.6937 22.3462 12.48 22.0799 12.48H19.1999ZM1.91994 16.32C1.65557 16.32 1.43994 16.5337 1.43994 16.8V18.72C1.43994 18.9862 1.65557 19.2 1.91994 19.2H4.79994C5.06432 19.2 5.27994 18.9862 5.27994 18.72V16.8C5.27994 16.5337 5.06432 16.32 4.79994 16.32H1.91994ZM7.67994 16.32C7.41557 16.32 7.19994 16.5337 7.19994 16.8V18.72C7.19994 18.9862 7.41557 19.2 7.67994 19.2H10.5599C10.8243 19.2 11.0399 18.9862 11.0399 18.72V16.8C11.0399 16.5337 10.8243 16.32 10.5599 16.32H7.67994ZM13.4399 16.32C13.1737 16.32 12.9599 16.5337 12.9599 16.8V18.72C12.9599 18.9862 13.1737 19.2 13.4399 19.2H16.3199C16.5862 19.2 16.7999 18.9862 16.7999 18.72V16.8C16.7999 16.5337 16.5862 16.32 16.3199 16.32H13.4399ZM19.1999 16.32C18.9337 16.32 18.7199 16.5337 18.7199 16.8V18.72C18.7199 18.9862 18.9337 19.2 19.1999 19.2H22.0799C22.3462 19.2 22.5599 18.9862 22.5599 18.72V16.8C22.5599 16.5337 22.3462 16.32 22.0799 16.32H19.1999Z" fill="#BDBDBD"></path>
</svg></button>
<div class="sort-wrap">Sort:<div style="margin-left: 5px; width: 180px;">
                <div>
                  <select id="sort_order_products">
                        <option value="price,ASC" selected="">Price
                            (low to high)</option>
                        <option value="price,DESC">Price
                            (high to low)</option>
                        <option value="size,DESC">Carat
                            (high to low)</option>
                        <option value="size,ASC">Carat (low
                            to high)</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

  <div id="table-container">

                 {%- liquid
                  assign items = collections.Diamond-Education.products
                    assign productGridView = grid_style
                    if cart.attributes.product_view != blank
                      assign productGridView = cart.attributes.product_view
                    endif
                  -%}
                 <div class="new-grid product-grid collection-grid choose-a-setting-grid mx-15 grid-view" id="grid-view" data-view="{{ productGridView }}" data-scroll-to>

                  {%- for product in items -%}
                          
                          {%- if product.object_type == 'product' -%}
                            
                                   {%- liquid
    assign on_sale = false
    if product.compare_at_price > product.price
      assign on_sale = true
    endif
  
    if settings.product_grid_image_margin == 0
      assign image_breathing_room = false
    else
      assign image_breathing_room = true
    endif
  
    assign product_tags = product.tags | join: ','
    assign has_custom_label = false
    assign custom_labels = ''
    if product.metafields.theme.label and product.metafields.theme.label != blank
      assign has_custom_label = true
      assign custom_labels = product.metafields.theme.label.value
    elsif product_tags contains '_label_'
      for tag in product.tags
        if tag contains '_label_'
          assign tag_starts_with = tag | slice: 0
          if tag_starts_with == '_'
            assign has_custom_label = true
            assign custom_label = tag | replace: '_label_', ''
            assign custom_labels = custom_labels | append: custom_label | append: ','
          endif
        endif
      endfor
    endif
  -%}
  
  <div class="grid-item grid-product {{ classes }} grid-product-image-breathing-room--{{ image_breathing_room }}" data-product-handle="{{ product.handle }}" data-product-id="{{ product.id }}">
    <div class="grid-item__content">
  
        {%- if settings.quick_add_enable or settings.quick_shop_enable -%}
          <div class="grid-product__actions">
            {%- if settings.quick_shop_enable and type != 'horizontal' -%}
              <button class="btn btn--circle btn--icon quick-product__btn quick-product__btn--not-ready js-modal-open-quick-modal-{{ product.id }} small--hide" title="{{ 'products.general.quick_shop' | t }}" data-handle="{{ product.handle }}">
                <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-search" viewBox="0 0 64 64"><path d="M47.16 28.58A18.58 18.58 0 1 1 28.58 10a18.58 18.58 0 0 1 18.58 18.58ZM54 54 41.94 42" style="stroke-miterlimit:10"/></svg>
                <span class="icon__fallback-text">{{ 'products.general.quick_shop' | t }}</span>
              </button>
            {%- endif -%}
            {%- if settings.quick_add_enable and product.available -%}
              {% comment %}
                Quick add feature:
                  - when a single variant option, product is immediately added
                  - when multiple variants, popup with product form appears
              {% endcomment %}
              {%- if product.variants.size > 1 -%}
                <button type="button" class="text-link quick-add-btn js-quick-add-form js-modal-open-quick-add" title="{{ 'products.product.add_to_cart' | t }}">
                  <span class="btn btn--circle btn--icon">
                    <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-plus" viewBox="0 0 64 64"><path class="cls-1" d="M32 9v46m23-23H9"/></svg>
                    <span class="icon__fallback-text">{{ 'products.product.add_to_cart' | t }}</span>
                  </span>
                </button>
              {%- else -%}
                <button type="button" class="text-link quick-add-btn js-quick-add-btn"
                        title="{{ 'products.product.add_to_cart' | t }}"
                        data-id="{{ product.selected_or_first_available_variant.id }}">
                  <span class="btn btn--circle btn--icon">
                    <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-plus" viewBox="0 0 64 64"><path class="cls-1" d="M32 9v46m23-23H9"/></svg>
                    <span class="icon__fallback-text">{{ 'products.product.add_to_cart' | t }}</span>
                  </span>
                </button>
              {%- endif -%}
            {%- endif -%}
          </div>
        {%- endif -%}
      
  
      {%- liquid
        assign imageRatio = settings.product_grid_image_size
        assign fixed_aspect_ratio = false
        unless imageRatio == 'natural'
          assign fixed_aspect_ratio = true
        endunless
  
        if image_style == 'circle'
          assign fixed_aspect_ratio = true
          assign imageRatio = 'square'
        endif
  
        assign preview_image = product.featured_media.preview_image
      -%}
  
  
      <a href="diamond-detail?product_id={{ product.id }}" class="grid-item__link"> 
      <!-- <a href="{{ product.url }}" class="grid-item__link">  -->
        
        <div class="grid-item__meta">
          <div class="grid-item__meta-main">
              
              <div class="grid-product__title">{{ product.title }} 
                
                {% if product.metafields.Diamond.shape != blank %}
                  <span data-shape="{{ product.metafields.Diamond.shape }}">
                  , {{ product.metafields.Diamond.shape }} 
                  </span>
                  {% else %}
                  
                  {% assign description = product.description | split: '<br>' %}
                  {% for line in description %}
                    {% if line contains '<b>Shape</b>' %}
                      {% assign shape = line | split: ':' | last %}
                      <span data-shape="{{ shape | strip_html | strip }}">
                      , {{ shape | strip_html | strip }}
                      </span>
                    {% endif %}
                  {% endfor %}
                  {% endif %}
                {% if product.metafields.Diamond.weight != blank %} 
                  <span data-carat="{{ product.metafields.Diamond.weight }}">
                  , {{ product.metafields.Diamond.weight }}
                  </span>
                  {% else %}
                  {% assign description = product.description | split: '<br>' %}
                  {% for line in description %}
                    {% if line contains '<b>Carats</b>'  %}
                      {% assign Carats = line | split: ':' | last %}
                      <span data-carat="{{ Carats | strip_html | strip }}">
                     , {{ Carats | strip_html | strip }}
                      </span>
                    {% endif %}
                  {% endfor %}
                  {% endif %}
                {% if product.metafields.Diamond.color != blank %}
                  <span data-color="{{ product.metafields.Diamond.color }}">
                  , {{ product.metafields.Diamond.color }} 
                  </span>
                  {% else %}
                  {% assign description = product.description | split: '<br>' %}
                  {% for line in description %}
                    {% if line contains '<b>Color</b>' %}
                      {% assign Color = line | split: ':' | last %}
                    <span data-color="{{ Color | strip_html | strip }}">
                     , {{ Color | strip_html | strip }} 
                    </span>
                    {% endif %}
                  {% endfor %}
                  {% endif %}
                {% if product.metafields.Diamond.clarity != blank %}
                    <span data-clarity="{{ product.metafields.Diamond.clarity }}">
                    , {{ product.metafields.Diamond.clarity }} 
                    </span>
                   {% else %}
                  {% assign description = product.description | split: '<br>' %}
                  {% for line in description %}
                    {% if line contains '<b>Clarity</b>' %}
                      {% assign Clarity = line | split: ':' | last %}
                    <span data-clarity="{{ Clarity | strip_html | strip }}">
                      , {{ Clarity | strip_html | strip }} 
                    </span>
                    {% endif %}
                  {% endfor %}
                  {% endif %}
                 {% if product.metafields.Diamond.polish != blank %}
                  <span data-polish="{{ product.metafields.Diamond.polish }}">
                  , {{ product.metafields.Diamond.polish }}
                  </span>
                  {% else %}
                  {% assign description = product.description | split: '<br>' %}
                  {% for line in description %}
                    {% if line contains '<b>Polish</b>' %}
                      {% assign Polish = line | split: ':' | last %}
                      {% if Polish == blank %}
                      {% else %}
                  <span data-polish="{{ Polish | strip_html | strip }}">
                        
                       , {{ Polish | strip_html | strip }}
                  </span>
                    {% endif %}
                        
                    {% endif %}
                  {% endfor %}
                  {% endif %}
                {% if product.metafields.Diamond.cut != blank %}
                  <span data-cut="{{ product.metafields.Diamond.cut }}">
                  , {{ product.metafields.Diamond.cut }}
                  </span>
                  {% else %}
                  {% assign description = product.description | split: '<br>' %}
                  {% for line in description %}
                    {% if line contains '<b>Cut</b>' %}
                      {% assign Cut = line | split: ':' | last %}
                      {% if Cut == blank %}
                      {% else %}
                  <span data-cut="{{ Cut | strip_html | strip }}">
                        
                       , {{ Cut | strip_html | strip }}
                  </span>
                    {% endif %}
                        
                    {% endif %}
                  {% endfor %}
                  {% endif %}
                 {% if product.metafields.Diamond.fluorescence_int != blank %}
                  <span data-fluor="{{ product.metafields.Diamond.fluorescence_int }}">
                  , {{ product.metafields.Diamond.fluorescence_int }}
                  </span>
                  {% else %}
                  {% assign description = product.description | split: '<br>' %}
                  {% for line in description %}
                    {% if line contains '<b>Fluorescence</b>' %}
                      {% assign Fluor  = line | split: ':' | last %}
                      {% if Fluor == blank %}
                      {% else %}
                  <span data-fluor="{{ Fluor | strip_html | strip }}">
                        
                       , {{ Fluor | strip_html | strip }}
                  </span>
                    {% endif %}
                        
                    {% endif %}
                  {% endfor %}
                  {% endif %}
                {% if product.metafields.Diamond.symmetry != blank %}
                  <span data-sym="{{ product.metafields.Diamond.symmetry }}">
                  , {{ product.metafields.Diamond.symmetry }}
                  </span>
                  {% else %}
                  {% assign description = product.description | split: '<br>' %}
                  {% for line in description %}
                    {% if line contains '<b>Symmetry</b>' %}
                      {% assign Sym  = line | split: ':' | last %}
                      {% if Sym == blank %}
                      {% else %}
                  <span data-sym="{{ Sym | strip_html | strip }}">
                        
                       , {{ Sym | strip_html | strip }}
                  </span>
                    {% endif %}
                        
                    {% endif %}
                  {% endfor %}
                  {% endif %}
                
              </div>
            <div class="desc" id ="product_meta_item" style="display:none;">
              {% if product.metafields.Diamond.shape != blank %}
                  {{ product.metafields.Diamond.shape }} 
            
              {% elsif product.metafields.Diamond.weight != blank %} 
                  , {{ product.metafields.Diamond.weight }}
          
              {% elsif product.metafields.Diamond.color != blank %}
                  , {{ product.metafields.Diamond.color }} 
            
                {% elsif product.metafields.Diamond.clarity != blank %}
                  , {{ product.metafields.Diamond.clarity }} 
                 
                {% elsif product.metafields.Diamond.cut != blank %}
                  ,{{ product.metafields.Diamond.cut }}
                 {% elsif product.metafields.Diamond.polish != blank %}
                  {{ product.metafields.Diamond.polish }}
                 {% else %}
                  {% assign description = product.description | split: '<br>' %}
                {{ description }}
                {% endif %}
              
              
  
            </div>
            <div product-id="{{ product.id }}" product-handle="{{ product.handle }}" class="alireviews-review-star-rating"></div>
  
              {%- if settings.vendor_enable -%}
                <div class="grid-product__vendor">{{ product.vendor }}</div>
              {%- endif -%}
            </div>
            
        </div>  </a>
        <div class="check_box_div">
            <input type="checkbox" id="{{ product.id }}" value="{{ product.id }}" >
            <label for="{{ product.id }}"></label>
        </div>
      <a href="diamond-detail?product_id={{ product.id }}" class="grid-item__link">  <div class="grid-item__meta-secondary">
              <div class="grid-product__price">
                {%- if product.price_varies -%}
                  <span class="grid-product__price--current">
                  {{ product.price }}
                  </span>
                {%- else -%}
                  {%- if on_sale -%}
                    <span class="">{{ 'products.general.sale_price' | t }}</span>
                  {%- endif -%}
                  <span class="grid-product__price--current">
                    
                  </span>
                {%- endif -%}
                {%- if on_sale -%}
                  <span class="">{{ 'products.general.regular_price' | t }}</span>
                  <span class="grid-product__price--original">
                    {%- render 'price' with product.compare_at_price -%}
                  </span>
  
                  {%- if settings.product_save_amount -%}
                    {%- if settings.product_save_type == 'dollar' -%}
                      {%- capture saved_amount -%}{{ product.compare_at_price | minus: product.price | money_without_trailing_zeros }}{%- endcapture -%}
                    {%- else -%}
                      {%- capture saved_amount -%}{{ product.compare_at_price | minus: product.price | times: 100.0 | divided_by: product.compare_at_price | round }}%{%- endcapture -%}
                    {%- endif -%}
                    <span class="grid-product__price--savings">
                      {{ 'products.general.save_html' | t: saved_amount: saved_amount }}
                    </span>
                  {%- endif -%}
                {%- endif -%}
  
                {%- assign product_variant = product.selected_or_first_available_variant -%}
                {%- if product_variant.unit_price_measurement -%}
                  <div class="product__unit-price">
                    {%- capture unit_price_base_unit -%}
                      {%- if product_variant.unit_price_measurement -%}
                        {%- if product_variant.unit_price_measurement.reference_value != 1 -%}
                          {{ product_variant.unit_price_measurement.reference_value }}
                        {%- endif -%}
                        {{ product_variant.unit_price_measurement.reference_unit }}
                      {%- endif -%}
                    {%- endcapture -%}
  
                    {{ product_variant.unit_price | money }}/{{ unit_price_base_unit }}
                  </div>
                {%- endif -%}
              </div>
              
            </div>
      </a>
    </div>
  </div>
                  
                          
                          {%- endif -%}
                        {%- endfor -%}
        </div>

    
  <table id="example" class="table nowrap display" cellspacing="0" width="100%" role="grid" aria-describedby="example_info" style="width: 100%;">
    <thead>
      <tr class="tr_first_row">
        <th>
          Image
        </th>
        <th class="">
          Stock#
        </th>
        <th class="">
          Shape
        </th>
        <th class="">
          Cts
        </th>
        <th class="">
          Color
        </th>
        <th class="" >
          Clarity
        </th>
        <th class="">
          Cut
        </th>
          <th class="">
          Price
          </th>
        <th class="">
          Action
        </th>
                
      </tr>
  </thead>
    <tbody id="productContainer">
      {% for availability in collections.Diamond-Education.products %}
      <tr class="">    
        <td>
          <img src="{{ availability.featured_image.src | img_url: '50X50' }}" style="margin:auto;">
        </td>
        <td>
           {% if availability.metafields.Diamond.stock_id != blank %}
               {{ availability.metafields.Diamond.stock_id  }}
          {% else %}
                        {% assign description = availability.description | split: '<br>' %}
            {% for line in description %}
              {% if line contains '<b>Stock No</b>' %}
                {% assign stock = line | split: ':' | last %}
                {{ stock | strip_html | strip }}
              {% endif %}
            {% endfor %}
             {% endif %}
        </td>
        <td data-shape="{% if availability.metafields.Diamond.shape != blank %} {{ availability.metafields.Diamond.shape | default: 'unknown' | downcase }}  {% else %} {% assign description = availability.description | split: '<br>' %}
            {% for line in description %}
              {% if line contains '<b>Shape</b>' %}
                {% assign shape = line | split: ':' | last %}
                {{ shape | strip_html | strip }}
              {% endif %}
            {% endfor %}
             {% endif %}">
          {% if availability.metafields.Diamond.shape != blank %}
               {{ availability.metafields.Diamond.shape  }}
          {% else %}
                        {% assign description = availability.description | split: '<br>' %}
            {% for line in description %}
              {% if line contains '<b>Shape</b>' %}
                {% assign shape = line | split: ':' | last %}
                {{ shape | strip_html | strip }}
              {% endif %}
            {% endfor %}
             {% endif %}
         </td>
        <td class="">
         
          {% if availability.metafields.Diamond.weight != blank %}
               {{ availability.metafields.Diamond.weight }}
          {% else %}
            {% for line in description %}
              {% if line contains '<b>Carats</b>' %}
              {% assign weight = line | split: ':' | last %}
              {{ weight | strip_html | strip }}
            {% endif %}
          {% endfor %}
             {% endif %}
        </td>
        <td>
          {% if availability.metafields.Diamond.color != blank %}
              {% if availability.metafields.Diamond.color == 'N' %}
                 -
              {% elsif availability.metafields.Diamond.color == 'NA' %}
                 -
              {% else %}
                {{ availability.metafields.Diamond.color }}
              {% endif %}
          {% else %}
             {% for line in description %}
              {% if line contains '<b>Color</b>' %}
              {% assign Color = line | split: ':' | last %}
              {{ Color | strip_html | strip }}
            {% endif %}
          {% endfor %}
        {% endif %}
       </td>
        <td>
        {% if availability.metafields.Diamond.clarity != blank %}
                {{ availability.metafields.Diamond.clarity }}
          {% else %}
             {% for line in description %}
              {% if line contains '<b>Clarity</b>' %}
              {% assign Clarity = line | split: ':' | last %}
              {{ Clarity | strip_html | strip }}
            {% endif %}
          {% endfor %}
             {% endif %}
        </td>
        <td>
        {% if availability.metafields.Diamond.cut != blank %}
               {% if availability.metafields.Diamond.cut == 'G' %}
                  {{ 'GD' }}
               {% else %}
                {{ availability.metafields.Diamond.cut }}
               {% endif %}
          {% elsif  availability.metafields.Diamond.cut == blank %}
                  -
                
              {% else %}
             {% for line in description %}
                {% if line contains '<b>Cut</b>' %}
                {% assign Cut = line | split: ':' | last %}
                {{ Cut | strip_html | strip }}
                {% if Cut == blank %}
                  -
                  {% endif %}
              {% endif %}
            {% endfor %}
             {% endif %}
        
          </td>
        <td>
          {% if availability.price != blank and availability.price != 'NA' %}
                  {% if availability.price != 'NA' %}

                   {{ availability.price | money }}
                  {% else %}
                     0
                  {% endif %}
            {% else %}
               0
            {% endif %}
        </td>
        <td class="">
          <a href="/pages/diamond-detail?product_id={{ availability.id }}">Details</a>
        </td>
      </tr>
      {% endfor %}
    </tbody>
  </table>
  <!-- /extensions/theme-extension/blocks/products-list.liquid -->
<div id="product-block"></div>

<script>

  document.addEventListener('DOMContentLoaded', function() {
    const apiUrl = 'http://localhost:4000/api/products';
    
    fetch(apiUrl)
      .then(response => response.json())
      .then(data => {
        const productBlock = document.getElementById('product-block');
        
        if (Array.isArray(data) && data.length > 0) {
          const productsHtml = data.map(product => `
            <div class="product">
              <img src="${product.image}" alt="${product.title}" />
              <h2>${product.title}</h2>
              <p>Price: $${product.price}</p>
              <p>${product.description}</p>
              <p>Category: ${product.category}</p>
            </div>
          `).join('');
          
          productBlock.innerHTML = productsHtml;
        } else {
          productBlock.innerHTML = '<p>No products found.</p>';
        }
      })
      .catch(error => {
        console.error('Error fetching products:', error);
        document.getElementById('product-block').innerHTML = '<p>Error fetching products.</p>';
      });
  });
</script>

  </div>
  

   <!-- Paginate by 12000 products -->
        <div class="total-count">
       <!-- Total Products: {{ collections.Diamond-Education.products.size }} -->
    </div>
     <div class="pagination">
      {% if paginate.previous %}
        <a href="{{ paginate.previous.url }}">« Previous</a>
      {% endif %}
      {% for page in paginate.pages %}
        {% if page.is_link %}
          <a href="{{ page.url }}" {% if page.is_current %}class="active"{% endif %}>{{ page.title }}</a>
        {% else %}
          <span class="ellipsis">&#8230;</span>
        {% endif %}
      {% endfor %}
      {% if paginate.next %}
        <a href="{{ paginate.next.url }}">Next »</a>
      {% endif %}
    </div>

{% endpaginate %}

</div>
<!-- list show end -->
  {% endpaginate %}

  <style>
  .grid-view #example_wrapper,
  .list-view .grid-view {display: none; }
    .grid-view {
      /* display: none; */
      gap: 10px;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      grid-auto-rows: minmax(100px, auto);
    }

    .grid-item {
      /* Grid item styles */
    }

    .grid-view .list-view {
      display: block;
    }
    

  #product-block{
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
  }

  .product {
    border: 1px solid #ddd;
    padding: 10px;
    width: 200px;
    text-align: center;
  }

  .product img {
    max-width: 100%;
    height: auto;
  }
</style>

<script>
  $(".more_filter_btn").click(function() {
  
   var lable = $(".more_filter_btn span").text().trim();
   // alert(lable);
   if(lable == "Less Filter") {
     $(".more_filter_btn span ").text("More Filter");
     $(".more-filter").hide();
        $(".more_filter_btn svg").removeClass("rotate-270").addClass("rotate-90");
   }
   else {
     $(".more_filter_btn span").text("Less Filter");
     $(".more-filter").show();
     $(".more_filter_btn svg").removeClass("rotate-90").addClass("rotate-270");
   }
    
  });
     document.addEventListener("DOMContentLoaded", function() {
        // Get the select element
        var selectElement = document.getElementById("sort_order_products");

        // Add event listener for when selection changes
        selectElement.addEventListener("change", function() {
            // Get the selected value (e.g., "price,ASC")
            var selectedValue = selectElement.value;

            // Call function to sort the table based on selected criteria
            sortTable(selectedValue);
        });

        // Function to sort the table
        function sortTable(selectedValue) {
            // Split the selected value to get criteria and order
            var parts = selectedValue.split(",");
            var criteria = parts[0]; // e.g., "price"
            var order = parts[1]; // e.g., "ASC" or "DESC"

            // Get the table body
            var tableBody = document.querySelector("#example tbody");
  if (tableBody) {
            // Get all table rows
            var rows = Array.from(tableBody.querySelectorAll("tr"));

            // Sort the rows based on the selected criteria and order
            rows.sort(function(a, b) {
                var aValue = getDataValue(a, criteria);
                var bValue = getDataValue(b, criteria);
                if (order === "ASC") {
                    return aValue > bValue ? 1 : -1;
                   console.log(aValue > bValue ? 1 : -1);
                } else {
                    return aValue < bValue ? 1 : -1;
                }
            });
            rows.forEach(function(row) {
                tableBody.appendChild(row);
            });
      } 
        }

        // Function to get data value from a row
        function getDataValue(row, criteria) {
            switch (criteria) {
                case "price":
                     var priceString = row.cells[7].innerText.replace(/[$,]/g, "");
                      // Parse the price string as a float
                      return parseFloat(priceString);
                case "size":
                    // Assuming size is stored in the fourth cell (index 3) of each row
                    return parseFloat(row.cells[3].innerText);
                    // Adjust the index based on the actual position of the size column in your table
                default:
                    // Handle other criteria if needed
                    return null;
            }
}
    });
 $(document).ready(function() {
  $('#filterShape').on('change', function() {
    var selectedShape = $(this).val();
    $('#productContainer td').hide();
    if (selectedShape !== '') {
      $('#productContainer td[data-shape="' + selectedShape + '"]').show();
    } else {
      $('#productContainer td').show();
    }
  });
});

 
document.addEventListener("DOMContentLoaded", function() {

    var currentPageURL = window.location.href;
    var targetElement = document.getElementById('choose-diamond');
    var expectedURL = currentPageURL;
    if (currentPageURL === expectedURL) {
        targetElement.classList.add('active');
    }
 const urlParams = new URLSearchParams(window.location.search);
  
        const selectedVariantContainer = document.getElementById('selected-variant-container');
        const selecteddiamondContainer = document.getElementById('selected-diamond-container');
              selectedVariantContainer.innerHtml = ""
  
        const selectedVariantId = localStorage.getItem('selectedVariantId');
        const selectedDVariantId = localStorage.getItem('selectedDVariantId');
        const selectedRingId = localStorage.getItem('selectedRingId');
        const selectedDiamondId = localStorage.getItem('selectedDiamondId');
  
        function hideResetButton() {
              const resetBtn = document.getElementById('reset_btn');
              resetBtn.style.display = 'none';
          }

  if (selectedVariantId || selectedDVariantId || selectedRingId || selectedDiamondId) {
       const resetBtn = document.getElementById('reset_btn');    
             resetBtn.addEventListener('click', function() {
              localStorage.clear();
              window.location.href = 'https://ring-premier-one.myshopify.com/pages/ring-builder';
                
        });


  
        fetch(`/admin/api/2024-01/products/${selectedRingId}.json`, {
          headers: {
            'X-Shopify-Access-Token': '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',
          }
        })
        .then(response => response.json())
        .then(productData => {
    
             console.log(productData);
              const productTitle = productData.title || productData.product.title;
               const titleElement = selectedVariantContainer.querySelector('#product-title');
              titleElement.textContent = productTitle;
            const diamondShapes = ['Round', 'Princess', 'Emerald', 'Asscher', 'Cushion', 'Marquise', 'Radiant', 'Oval', 'Pear', 'Heart',];
            console.log("Product Tags:", productData.product.tags);
                    if (typeof productData.product.tags === 'string') {
                        const tagsArray = productData.product.tags.split(',').map(tag => tag.trim());
                        console.log("Tags Array:", tagsArray);
            
                        const shapeTag = tagsArray.find(tag => diamondShapes.includes(tag));
                        console.log("Shape Tag:", shapeTag);
            
                        if (shapeTag) {
                            autoCheckShapeCheckbox(shapeTag);
                        } else {
                            console.warn("No shape tag found in product tags.");
                        }
                    } else {
                        console.error("Product tags are not in expected string format.");
                    }
        })
        .catch(error => console.error('Error fetching variant details:', error));
  
        fetch(`/admin/api/2024-01/variants/${selectedVariantId}.json`, {
                        headers: {
                          'X-Shopify-Access-Token': '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',
                      }
                    })
        .then(response => response.json())
        .then(variantData => {
          
          const variantPrice = variantData.variant.price;
           const priceElement = selectedVariantContainer.querySelector('#variant-price');
                priceElement.textContent = formatMoney(variantPrice);
        })
        .catch(error => console.error('Error fetching variant details:', error));
      
       fetch(`/admin/api/2024-01/products/${selectedDiamondId}.json`, {
          headers: {
            'X-Shopify-Access-Token': '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',
          }
        })
        .then(response => response.json())
        .then(diamondData => {
             // const productTitle = diamondData.title || diamondData.product.title;
             const productTitle = diamondData.product.variants[0].sku ;
             const titleElement = selecteddiamondContainer.querySelector('#product-title');
                   // titleElement.textContent = productTitle;
             const linkElement = document.createElement('a');
                    linkElement.textContent = productTitle;
                    linkElement.href = 'https://ring-premier-one.myshopify.com/pages/diamond-detail?product_id='+ diamondData.product.id ; // Adjust the URL as needed
                  
                  // Append the <a> tag to the title element
                  titleElement.appendChild(linkElement);
          
             const variantPrice = diamondData.product.variants[0].price;
             const priceElement = selecteddiamondContainer.querySelector('#variant-price');
                   priceElement.textContent = formatMoney(variantPrice);})
  } else{
    hideResetButton();
  }
  
    });

</script>



{% schema %}
  {
    "name": "App Embed",
    "target": "section",
    "settings": []
  }
{% endschema %}

